{"title":"Numpy Arrays","markdown":{"yaml":{"title":"Numpy Arrays"},"headingText":"Arrays as objects","containsRefs":false,"markdown":"\n\n\n\n\nNumpy is the highly-optimized, super-fast workhorse that underlies much of the scientific computing stack see Harris et al. 2020 in Nature for evidence.\n\n\n\nNow plot this ultra simple array using matplotlib.\n\nReshape our array into a 2 dimensional array of size 3 by 5.\n\nNOTE, numpy, and about 60% of computer programming, denotes things in terms of Row then Column (RC order) but some things, especially those that regard displaying pixels, denote things as x, y (which note is CR order)\n\nThat makes sense and kind we can kinda visualize the array in our head. Let's plot it.\n\n\nThe above show probably is not what you expected. It has interpreted it as five different lines, but we probably meant to\nthink of it as a matrix. For this, use imshow() rather than plot().\n\n\nThe a variable we defined holds much more information than jsut the raw values. It also gives us useful information necessary for working with really big data.\n\n## Creating an array from values\n\n\n## Array math\n\nNumpy is super smart about doing matrix math across multiple dimensions. Note how in the below, it correctly guesses we wanted to add things element-wise.\n\n\n## Slicing Arrays\n\nSometimes you want to operate on a subset of an array. Slicing provies a high-performance way of doing this.\n\n\nFinally, if you want to combine conditionals, when you're working inside an array you need to use Parentheses, & for and and | for or, as below.\n\n## Let's talk about performance\n\nBig data requires fast algorithms. Let's introduce a slow way of applying an algorithm, and then the fast way.\n\n\nNOTE: Iterating over arrays here is just for illustration as it is VERY VERY SLOW\nand loses the magic of numpy speed. We'll learn how to bet around this later\nby \"vectorizing\" functions, which basically means batch calculating\neverything in a vector all in one call. For now, here's an example of the\nmuch faster version\n\n\n## Diving into vectorized computation.\n\nHere we are going to do matrix math, but using the fast numpy methods.\n\n## Numpy broadcasting\n\nNumpy will smartly \"broadcast\" two matrices of different sizes or dimensions so that it works:\n\nAbove,  Numpy smartly figured out how the two dimensions could be repeatedly broadcast to each other so the math was \"well defined.\"\n\nLet's plot the results of this new f matrix we created.\n\nLooks very similar to above, so let's add a colorbar to make clear this value is not just our starting array.\n\n## Plot Mandlebrot\n\nWith these tools, we can do all sorts of things. Just for fun, let's end this section by defining a function for the Mandlebrot set and then plotting the function.\n\n## In-class exercise 3.1:\n\nAgain, I'll call on a random table to showcase their results.\n\n1. Create a 20 by 40 matrix of random values 0-1 (Hint: use the np.random.random function. Use VS Code's built-in help to see what you should enteR).\n2. Set the upper left quadrant to 1. (Hint: use slices) \n3. Next, set the last COLUMN to 2.\n4. Finally, change all values less than .5 to be 3. (Use np.where)\n","srcMarkdownNoYaml":"\n\n\n\n\nNumpy is the highly-optimized, super-fast workhorse that underlies much of the scientific computing stack see Harris et al. 2020 in Nature for evidence.\n\n\n\nNow plot this ultra simple array using matplotlib.\n\nReshape our array into a 2 dimensional array of size 3 by 5.\n\nNOTE, numpy, and about 60% of computer programming, denotes things in terms of Row then Column (RC order) but some things, especially those that regard displaying pixels, denote things as x, y (which note is CR order)\n\nThat makes sense and kind we can kinda visualize the array in our head. Let's plot it.\n\n\nThe above show probably is not what you expected. It has interpreted it as five different lines, but we probably meant to\nthink of it as a matrix. For this, use imshow() rather than plot().\n\n## Arrays as objects\n\nThe a variable we defined holds much more information than jsut the raw values. It also gives us useful information necessary for working with really big data.\n\n## Creating an array from values\n\n\n## Array math\n\nNumpy is super smart about doing matrix math across multiple dimensions. Note how in the below, it correctly guesses we wanted to add things element-wise.\n\n\n## Slicing Arrays\n\nSometimes you want to operate on a subset of an array. Slicing provies a high-performance way of doing this.\n\n\nFinally, if you want to combine conditionals, when you're working inside an array you need to use Parentheses, & for and and | for or, as below.\n\n## Let's talk about performance\n\nBig data requires fast algorithms. Let's introduce a slow way of applying an algorithm, and then the fast way.\n\n\nNOTE: Iterating over arrays here is just for illustration as it is VERY VERY SLOW\nand loses the magic of numpy speed. We'll learn how to bet around this later\nby \"vectorizing\" functions, which basically means batch calculating\neverything in a vector all in one call. For now, here's an example of the\nmuch faster version\n\n\n## Diving into vectorized computation.\n\nHere we are going to do matrix math, but using the fast numpy methods.\n\n## Numpy broadcasting\n\nNumpy will smartly \"broadcast\" two matrices of different sizes or dimensions so that it works:\n\nAbove,  Numpy smartly figured out how the two dimensions could be repeatedly broadcast to each other so the math was \"well defined.\"\n\nLet's plot the results of this new f matrix we created.\n\nLooks very similar to above, so let's add a colorbar to make clear this value is not just our starting array.\n\n## Plot Mandlebrot\n\nWith these tools, we can do all sorts of things. Just for fun, let's end this section by defining a function for the Mandlebrot set and then plotting the function.\n\n## In-class exercise 3.1:\n\nAgain, I'll call on a random table to showcase their results.\n\n1. Create a 20 by 40 matrix of random values 0-1 (Hint: use the np.random.random function. Use VS Code's built-in help to see what you should enteR).\n2. Set the upper left quadrant to 1. (Hint: use slices) \n3. Next, set the last COLUMN to 2.\n4. Finally, change all values less than .5 to be 3. (Use np.where)\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"numpy_arrays.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.433","bibliography":["../references.bib"],"theme":"cosmo","title":"Numpy Arrays"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}