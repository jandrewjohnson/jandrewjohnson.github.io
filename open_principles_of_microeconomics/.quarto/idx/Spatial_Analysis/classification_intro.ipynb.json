{"title":"Last day of class!","markdown":{"yaml":{"title":"Last day of class!"},"headingText":"Before the storm","containsRefs":false,"markdown":"\n\n\n\n\n\n\n\n\n\n# Agenda\n\n\n\n* Logistical note: scores for all submitted assignments should be up to date \\(check Canvas to see if everything looks as expected\\)\n\n* Discuss two current events that are shaking the world\n\n* Two final ML Big\\-data models\n\n  * Regression trees\n\n  * Na�ve Bayes classification\n\n* Integrating R and Python in one environment\n\n\n\n![](img\\\\1293.png)\n\n\n\n# AI/ML hits the mainstream\n\n\n\n# ChatGPT\n\n\n\n* The chatbot is a large language model that can \"predict\" the best words to respond to any prompt\\.\n\n  * Based on OpenAI's GPT\\-3\\.5 model\n\n  * The model includes 175 billion parameters \\(requiring 800 GB of storage\\)\\.\n\n* <span style=\"color:#000000\">Uses reinforcement learning on a recurrent</span>  neural network\n\n* <span style=\"color:#FF0000\">What does this change for us?</span>\n\n\n\n![](img\\\\1294.png)\n\n\n\n![](img\\\\1295.png)\n\n\n\n# Example using Assignment 1\n\n\n\n# What have we done?!\n\n\n\n* In the very least\\, this course has prepped you with the tools to understand and leverage this\\.\n\n  * For example\\, here's a tutorial that uses almost exactly our Python setup to create their own Chatbot:\n\n    * [https://www\\.youtube\\.com/watch?v=C\\-8sF81k7cY](https://www.youtube.com/watch?v=C-8sF81k7cY)\n\n  * Based on this tutorial:\n\n    * [https://jman4190\\.medium\\.com/how\\-to\\-build\\-a\\-gpt\\-3\\-chatbot\\-with\\-python\\-7b83e55805e6](https://jman4190.medium.com/how-to-build-a-gpt-3-chatbot-with-python-7b83e55805e6)\n\n\n\n# Classification of land-use, land-cover\n\n\n\n# From raw sentinel reflectance data\n\n\n\n# Some machine learning approaches retain \"understandability\"\n\n\n\n* Throughout this course we've seen applications of satellite data\n\n  * Often\\, we don't use the raw reflectance data\n\n  * Instead\\, we use a \"remote sensing product\" like land\\-use\\, land\\-cover \\(LULC\\) maps\\.\n\n* Most LULC maps are created by some form of a \"regression tree\" based approach\n\n  * We'll talk through those in a moment\n\n  * For now\\, though\\, I want to keep it simple with a highly \"understandable\" model: Na�ve Bayes\\.\n\n\n\n# Na�ve Bayes\n\n\n\n![](img\\\\1296.png)\n\n\n\n# Recommended reading\n\n\n\n<span style=\"color:#123654\">Johnson\\, B\\. A\\.\\, & Iizuka\\, K\\. \\(2016\\)\\. Integrating OpenStreetMap crowdsourced data and Landsat time\\-series imagery for rapid land use/land cover \\(LULC\\) mapping: Case study of the Laguna de Bay area of the Philippines\\. Applied Geography\\, 67\\, 140\\-149\\.</span>\n\n\n\n<span style=\"color:#337AB7\"> _[Breiman](http://link.springer.com/article/10.1023/A:1010933404324)_ </span>  <span style=\"color:#337AB7\"> _[\\, Leo\\. 2001\\. Random Forests\\. Machine Learning 45\\-1: 5\\-32\\.](http://link.springer.com/article/10.1023/A:1010933404324)_ </span>\n\n\n\n# LULC classification example\n\n\n\nOpen up 04\\_Random\\_Forests/01\\_lulc\\_classification\\.ipynb\n\n\n\n# Regression trees and Random forests!\n\n\n\n# But first, a quick break for Student Evaluation of Instructor.\n\n\n\n# What are these trees?\n\n\n\n# Regression trees\n\n\n\nView as decision tree\n\n\n\nView as partition\n\n\n\n# Building trees: approach\n\n\n\nIn the most basic implementation\\, pretty much a brute force approach:\n\n\n\nStart with a tree with one leaf\\, and compute \"loss\" \\(prediction error or impurity\\)\n\n\n\nFor each variable and each possible split point for that variable\\, try splitting\\, compute loss again\\.\n\n\n\nPick the best possible split from the previous step\\. Compare to current loss\\. If the improvement outweighs a complexity penalty\\, split\\. Otherwise stop\\.\n\n\n\nRepeat 1\\-3 for each leaf in the new tree\n\n\n\nView as decision tree\n\n\n\n# Moving beyond a tree\n\n\n\n* Trees are very flexible and intuitive\\, but not without their problems:\n\n  * Can be sensitive to input data � changing a point can give different splits\\, etc\n\n  * Most functions we're trying to learn aren't really step functions\\, are they?\n\n  * How do we quantify uncertainty?\n\n* Much of this can be addressed with bootstrapping\\.\n\n\n\n# Bootstrap reminder\n\n\n\n* For a sample with n observations:\n\n  * Create a bootstrap sample b by sampling n data points  _with replacement_  _ _ from our data\n\n  * Estimate the model on b\n\n  * Average the estimates over B bootstrap samples\\, and use that for SE estimation too\n\n\n\n# Bootstrap aggregating (Bagging)\n\n\n\n* Apply the bootstrap procedure to tree\\-building:\n\n  * Create a bootstrap training set b from the original training set\n\n  * Grow a tree from b\n\n  * Repeat for all b in the set B of bootstrap samples\n\n  * To predict an outcome for a new data point x\\, predict for each tree\\, then average \\(For classification trees\\, each of the trees vote\\)\n\n\n\n# From bagging to random forests\n\n\n\n* We can go further with the randomization idea in bagging\\.\n\n* Idea behind both: lower variance in predictions by averaging over different trees\\.\n\n  * Bagging: Get different trees by randomizing sample\n\n  * Random forests: Bagging plus randomizing which variables you can split on\\.\n\n* Each time you go to split\\, only consider a randomly selected subset of variables\\, and choose the best split among those variables\\.\n\n\n\n# R and Python together\n\n\n\n# Related to a topic very close to me: How do we glue multiple models together?\n\n\n\n![](img\\\\1297.png)\n\n\n\n# Let's see!\n\n\n\nOpen up 06\\_R\\_and\\_Python\\_together/01\\_combining\\_languages\\.ipynb\n\n\n\n# \n\n\n\n![](img\\\\1298.png)\n\n\n\n# From python for economists book\n\n\n\n<span style=\"color:#333333\">Incorporate </span>  <span style=\"color:#333333\">[https://aeturrell\\.github\\.io/coding\\-for\\-economists/coming\\-from\\-r\\.html](https://aeturrell.github.io/coding-for-economists/coming-from-r.html)</span>\n\n\n\n<span style=\"color:#333333\">For those coming from the '</span>  <span style=\"color:#333333\">tidyverse</span>  <span style=\"color:#333333\">' set of packages produced by RStudio\\, there are very direct Python equivalents\\. For example\\, Python has </span>  <span style=\"color:#333333\"> __plotnine__ </span>  <span style=\"color:#333333\"> which has the same syntax to R's </span>  <span style=\"color:#333333\"> __ggplot2__ </span>  <span style=\"color:#333333\">\\. There's also </span>  <span style=\"color:#333333\"> __plydata__ </span>  <span style=\"color:#333333\">\\, which has the same syntax as R's </span>  <span style=\"color:#333333\"> __dplyr__ </span>  <span style=\"color:#333333\"> package\\. In Python\\, </span>  <span style=\"color:#333333\"> __matplotlib__ </span>  <span style=\"color:#333333\"> and </span>  <span style=\"color:#333333\"> __pandas__ </span>  <span style=\"color:#333333\"> are more popular packages for plotting and data analysis\\, respectively\\, but those R\\-style packages are absolutely there if you prefer them\\. More on other similar packages below\\.</span>\n\n\n\n\n","srcMarkdownNoYaml":"\n\n\n\n\n\n\n# Before the storm\n\n\n\n# Agenda\n\n\n\n* Logistical note: scores for all submitted assignments should be up to date \\(check Canvas to see if everything looks as expected\\)\n\n* Discuss two current events that are shaking the world\n\n* Two final ML Big\\-data models\n\n  * Regression trees\n\n  * Na�ve Bayes classification\n\n* Integrating R and Python in one environment\n\n\n\n![](img\\\\1293.png)\n\n\n\n# AI/ML hits the mainstream\n\n\n\n# ChatGPT\n\n\n\n* The chatbot is a large language model that can \"predict\" the best words to respond to any prompt\\.\n\n  * Based on OpenAI's GPT\\-3\\.5 model\n\n  * The model includes 175 billion parameters \\(requiring 800 GB of storage\\)\\.\n\n* <span style=\"color:#000000\">Uses reinforcement learning on a recurrent</span>  neural network\n\n* <span style=\"color:#FF0000\">What does this change for us?</span>\n\n\n\n![](img\\\\1294.png)\n\n\n\n![](img\\\\1295.png)\n\n\n\n# Example using Assignment 1\n\n\n\n# What have we done?!\n\n\n\n* In the very least\\, this course has prepped you with the tools to understand and leverage this\\.\n\n  * For example\\, here's a tutorial that uses almost exactly our Python setup to create their own Chatbot:\n\n    * [https://www\\.youtube\\.com/watch?v=C\\-8sF81k7cY](https://www.youtube.com/watch?v=C-8sF81k7cY)\n\n  * Based on this tutorial:\n\n    * [https://jman4190\\.medium\\.com/how\\-to\\-build\\-a\\-gpt\\-3\\-chatbot\\-with\\-python\\-7b83e55805e6](https://jman4190.medium.com/how-to-build-a-gpt-3-chatbot-with-python-7b83e55805e6)\n\n\n\n# Classification of land-use, land-cover\n\n\n\n# From raw sentinel reflectance data\n\n\n\n# Some machine learning approaches retain \"understandability\"\n\n\n\n* Throughout this course we've seen applications of satellite data\n\n  * Often\\, we don't use the raw reflectance data\n\n  * Instead\\, we use a \"remote sensing product\" like land\\-use\\, land\\-cover \\(LULC\\) maps\\.\n\n* Most LULC maps are created by some form of a \"regression tree\" based approach\n\n  * We'll talk through those in a moment\n\n  * For now\\, though\\, I want to keep it simple with a highly \"understandable\" model: Na�ve Bayes\\.\n\n\n\n# Na�ve Bayes\n\n\n\n![](img\\\\1296.png)\n\n\n\n# Recommended reading\n\n\n\n<span style=\"color:#123654\">Johnson\\, B\\. A\\.\\, & Iizuka\\, K\\. \\(2016\\)\\. Integrating OpenStreetMap crowdsourced data and Landsat time\\-series imagery for rapid land use/land cover \\(LULC\\) mapping: Case study of the Laguna de Bay area of the Philippines\\. Applied Geography\\, 67\\, 140\\-149\\.</span>\n\n\n\n<span style=\"color:#337AB7\"> _[Breiman](http://link.springer.com/article/10.1023/A:1010933404324)_ </span>  <span style=\"color:#337AB7\"> _[\\, Leo\\. 2001\\. Random Forests\\. Machine Learning 45\\-1: 5\\-32\\.](http://link.springer.com/article/10.1023/A:1010933404324)_ </span>\n\n\n\n# LULC classification example\n\n\n\nOpen up 04\\_Random\\_Forests/01\\_lulc\\_classification\\.ipynb\n\n\n\n# Regression trees and Random forests!\n\n\n\n# But first, a quick break for Student Evaluation of Instructor.\n\n\n\n# What are these trees?\n\n\n\n# Regression trees\n\n\n\nView as decision tree\n\n\n\nView as partition\n\n\n\n# Building trees: approach\n\n\n\nIn the most basic implementation\\, pretty much a brute force approach:\n\n\n\nStart with a tree with one leaf\\, and compute \"loss\" \\(prediction error or impurity\\)\n\n\n\nFor each variable and each possible split point for that variable\\, try splitting\\, compute loss again\\.\n\n\n\nPick the best possible split from the previous step\\. Compare to current loss\\. If the improvement outweighs a complexity penalty\\, split\\. Otherwise stop\\.\n\n\n\nRepeat 1\\-3 for each leaf in the new tree\n\n\n\nView as decision tree\n\n\n\n# Moving beyond a tree\n\n\n\n* Trees are very flexible and intuitive\\, but not without their problems:\n\n  * Can be sensitive to input data � changing a point can give different splits\\, etc\n\n  * Most functions we're trying to learn aren't really step functions\\, are they?\n\n  * How do we quantify uncertainty?\n\n* Much of this can be addressed with bootstrapping\\.\n\n\n\n# Bootstrap reminder\n\n\n\n* For a sample with n observations:\n\n  * Create a bootstrap sample b by sampling n data points  _with replacement_  _ _ from our data\n\n  * Estimate the model on b\n\n  * Average the estimates over B bootstrap samples\\, and use that for SE estimation too\n\n\n\n# Bootstrap aggregating (Bagging)\n\n\n\n* Apply the bootstrap procedure to tree\\-building:\n\n  * Create a bootstrap training set b from the original training set\n\n  * Grow a tree from b\n\n  * Repeat for all b in the set B of bootstrap samples\n\n  * To predict an outcome for a new data point x\\, predict for each tree\\, then average \\(For classification trees\\, each of the trees vote\\)\n\n\n\n# From bagging to random forests\n\n\n\n* We can go further with the randomization idea in bagging\\.\n\n* Idea behind both: lower variance in predictions by averaging over different trees\\.\n\n  * Bagging: Get different trees by randomizing sample\n\n  * Random forests: Bagging plus randomizing which variables you can split on\\.\n\n* Each time you go to split\\, only consider a randomly selected subset of variables\\, and choose the best split among those variables\\.\n\n\n\n# R and Python together\n\n\n\n# Related to a topic very close to me: How do we glue multiple models together?\n\n\n\n![](img\\\\1297.png)\n\n\n\n# Let's see!\n\n\n\nOpen up 06\\_R\\_and\\_Python\\_together/01\\_combining\\_languages\\.ipynb\n\n\n\n# \n\n\n\n![](img\\\\1298.png)\n\n\n\n# From python for economists book\n\n\n\n<span style=\"color:#333333\">Incorporate </span>  <span style=\"color:#333333\">[https://aeturrell\\.github\\.io/coding\\-for\\-economists/coming\\-from\\-r\\.html](https://aeturrell.github.io/coding-for-economists/coming-from-r.html)</span>\n\n\n\n<span style=\"color:#333333\">For those coming from the '</span>  <span style=\"color:#333333\">tidyverse</span>  <span style=\"color:#333333\">' set of packages produced by RStudio\\, there are very direct Python equivalents\\. For example\\, Python has </span>  <span style=\"color:#333333\"> __plotnine__ </span>  <span style=\"color:#333333\"> which has the same syntax to R's </span>  <span style=\"color:#333333\"> __ggplot2__ </span>  <span style=\"color:#333333\">\\. There's also </span>  <span style=\"color:#333333\"> __plydata__ </span>  <span style=\"color:#333333\">\\, which has the same syntax as R's </span>  <span style=\"color:#333333\"> __dplyr__ </span>  <span style=\"color:#333333\"> package\\. In Python\\, </span>  <span style=\"color:#333333\"> __matplotlib__ </span>  <span style=\"color:#333333\"> and </span>  <span style=\"color:#333333\"> __pandas__ </span>  <span style=\"color:#333333\"> are more popular packages for plotting and data analysis\\, respectively\\, but those R\\-style packages are absolutely there if you prefer them\\. More on other similar packages below\\.</span>\n\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"classification_intro.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.433","bibliography":["../references.bib"],"theme":"cosmo","title":"Last day of class!"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}